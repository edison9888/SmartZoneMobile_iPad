    ////  SearchEmployeeRoot.m//  MobileKate2.0_iPad////  Created by Kyung Wook Baek on 11. 2. 18..//  Copyright 2011 ktds. All rights reserved.//#import "SearchEmployeeRoot.h"#import "URL_Define.h"#import "MobileKate2_0_iPadAppDelegate.h"#import "SearchEmployeeDetail.h"#import "SplitOverlayViewController.h"@implementation SearchEmployeeRoot@synthesize background;@synthesize addtableview;@synthesize executiveStaffLabel;@synthesize combobox;@synthesize streams;@synthesize modalPickerView;@synthesize currentPage;@synthesize loadDatamode;@synthesize	detailDatamode;@synthesize morePageFlag;@synthesize indicator;@synthesize pickerView;@synthesize pickerList;@synthesize orientations;@synthesize cm;@synthesize employeeList;@synthesize nextCell;@synthesize selectedRow;@synthesize detailViewController;	// The designated initializer.  Override if you create the controller programmatically and want to perform customization that is not appropriate for viewDidLoad./* - (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil { self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil]; if (self) { // Custom initialization. } return self; } */	// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.- (void)viewDidLoad {	cm = [[Communication alloc] init];	self.cm.delegate= self;	self.title = @"임직원 조회";		//background.hidden;		//executiveStaffLabel.text = nil;	noti = [NSNotificationCenter defaultCenter];	//[noti addObserver:self selector:@selector(searchEmployee) name:@"searchEmployee" object:nil];	//[noti addObserver:self selector:@selector(comboboxPush2) name:@"comboboxPush2" object:nil];	//[noti addObserver:self selector:@selector(loadMore) name:@"loadMore" object:nil];	[noti addObserver:self selector:@selector(listClean) name:@"listClean" object:nil];	[noti addObserver:self selector:@selector(overlayView) name:@"employeeOverlayView" object:nil];    [noti addObserver:self selector:@selector(overlayViewCancel) name:@"employeeOverlayViewCancel" object:nil];	self.detailViewController = (SearchEmployeeDetail *)[[self.splitViewController.viewControllers objectAtIndex:1]visibleViewController];		//self.addtableview.scrollEnabled = YES;		//[self.addtableview setNeedsDisplay];			//	EmployeeTableController *employeeTable = [[EmployeeTableController alloc]initWithNibName:@"EmployeeTableController" bundle:nil];		//[self.addtableview addSubview:employeeTable.view];	self.currentPage = 1;	self.loadDatamode = NO;	self.morePageFlag = YES;	self.employeeList.delegate = self;	self.employeeList.dataSource = self;	self.employeeList.rowHeight = 34;	self.pickerList = [NSArray arrayWithObjects:@"전 체", @"이 름", @"휴대폰", @"사내번호", @"부서명", nil];	self.pickerView.delegate = self;	self.pickerView.dataSource = self;	self.contentSizeForViewInPopover = CGSizeMake(320, 460);	self.executiveStaffLabel.delegate = self;	self.navigationController.navigationBar.barStyle = UIBarStyleBlackOpaque;		Clipboard *clipboard = [Clipboard sharedClipboard];	NSString *selectStype = [clipboard clipKey:@"stype"];	combobox.text = selectStype;	if (selectStype) {		if ([selectStype isEqualToString:@"이 름"]) {			[pickerView selectRow:[pickerList count]-4 inComponent:0 animated:YES];		}		else if ([selectStype isEqualToString:@"휴대폰"]) {			[pickerView selectRow:[pickerList count]-3 inComponent:0 animated:YES];		}				else if ([selectStype isEqualToString:@"사내번호"]) {			[pickerView selectRow:[pickerList count]-2 inComponent:0 animated:YES];		}		else if ([selectStype isEqualToString:@"부서명"]) {			[pickerView selectRow:[pickerList count]-1 inComponent:0 animated:YES];		}else if ([selectStype isEqualToString:@"전 체"]) {			[pickerView selectRow:[pickerList count]-5 inComponent:0 animated:YES];		}	}	else {		[pickerView selectRow:[pickerList count]-5 inComponent:0 animated:YES];	}			self.indicator.hidden = YES;		self.addtableview.scrollEnabled = YES;    [super viewDidLoad];	}- (void)viewDidDisappear:(BOOL)animated {    [super viewDidDisappear:animated];		//executiveStaffLabel.text = nil;		}- (void)viewWillDisappear:(BOOL)animated{	if (cm != nil) {		[cm cancelCommunication];	}	}- (void)viewWillAppear:(BOOL)animated {	cm = [[Communication alloc] init];	self.cm.delegate= self;}-(void)listClean{		self.streams = nil;		[self.employeeList reloadData];}#pragma mark -#pragma mark Table view data source- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {		// Return the number of sections.    return 1;}- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {		// Return the number of rows in the section.	Clipboard *clipboard = [Clipboard sharedClipboard];	NSString *moreFlag = [clipboard clipKey:@"morePageFlag"];	if ([moreFlag isEqualToString:@"NO"]) {		self.morePageFlag = NO;	}	else {		self.morePageFlag = YES;			}		[moreFlag release];	if ( [self.streams count] > 0) {		if (self.morePageFlag) {			return [self.streams count]+1;		}		else {			return [self.streams count];		}							}    return 0;}- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath {	UIColor *color = ((indexPath.row % 2) == 0) ?  [UIColor whiteColor] :[UIColor colorWithWhite:0.97 alpha:1];			cell.backgroundColor = color;}- (UITableViewCell *) getCellContentView:(NSString *)cellIdentifier{		//UIColor *color = ((indexPath.row % 2) == 0) ?  [UIColor colorWithRed:223.0/255 green:222.0/255 blue:255.0/255 alpha:1] :[UIColor colorWithRed:255.0/255 green:222.0/255 blue:223.0/255 alpha:1];	CGRect cellFrame = CGRectMake(0,0,300,65); 	UITableViewCell *cell = [[[UITableViewCell alloc] initWithFrame:cellFrame reuseIdentifier:cellIdentifier] autorelease];		CGRect loadmoreValueRect = CGRectMake(10,10,60,15);	UILabel *loadmore = [[UILabel alloc] initWithFrame:loadmoreValueRect];	loadmore.tag = kLoadMoreValueTag;	[cell.contentView addSubview:loadmore];		//loadmore.backgroundColor = color;	[loadmore release];			CGRect nameValueRect = CGRectMake(10,10,60,15);	UILabel *nameValue = [[UILabel alloc] initWithFrame:nameValueRect];	nameValue.tag = kNameValueTag;	[cell.contentView addSubview:nameValue];		//nameValue.backgroundColor = color;	[nameValue release];		CGRect posValueRect = CGRectMake(55,10,70,15);	UILabel *posValue = [[UILabel alloc] initWithFrame:posValueRect];	posValue.tag = kPosValueTag;	[cell.contentView addSubview:posValue];		//posValue.backgroundColor = color;	[posValue release];		CGRect corpValueRect = CGRectMake(120,10,140,15);	UILabel *corpValue = [[UILabel alloc] initWithFrame:corpValueRect];	corpValue.tag = kCorpValueTag;	[cell.contentView addSubview:corpValue];		//corpValue.backgroundColor = color;	[corpValue release];		CGRect reserv1ValueRect = CGRectMake(200,10,100,15);	UILabel *reserv1Value = [[UILabel alloc] initWithFrame:reserv1ValueRect];	reserv1Value.tag = kReserv1ValueTag;	[cell.contentView addSubview:reserv1Value];		//reserv1Value.backgroundColor = color;	[reserv1Value release];				return cell;}	// Customize the appearance of table view cells.- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {				//CGRect tableFrame = self.tableView.frame;		//tableFrame.size.height = 460;		//self.tableView.frame = tableFrame;			static NSString *CellIdentifier = @"Cell";    		UITableViewCell *cell;		UIColor *color = ((indexPath.row % 2) == 0) ?  [UIColor whiteColor] :[UIColor colorWithWhite:0.97 alpha:1];	if (indexPath.row == [self.streams count]) {		cell = self.nextCell;					}else {		cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];		if (cell == nil) {						cell = [self getCellContentView:CellIdentifier];		}				UILabel *name = (UILabel *)[cell.contentView viewWithTag:kNameValueTag];		name.text = [[streams objectAtIndex: indexPath.row] objectForKey:@"name"];		name.font = [UIFont systemFontOfSize:14];		name.backgroundColor = color;				UILabel *pos = (UILabel *)[cell.contentView viewWithTag:kPosValueTag];		NSString *postext = [[streams objectAtIndex: indexPath.row] objectForKey:@"pos"];		if ([postext isEqualToString:@""]) {			pos.text = postext;		}		else {			pos.text = [NSString stringWithFormat:@"(%@)",postext];		}		pos.backgroundColor = color;				pos.font = [UIFont systemFontOfSize:14];				UILabel *corp = (UILabel *)[cell.contentView viewWithTag:kCorpValueTag];		corp.text = [[streams objectAtIndex: indexPath.row] objectForKey:@"corp"];		corp.font = [UIFont systemFontOfSize:14];		corp.backgroundColor = color;						UILabel *reserv1 = (UILabel *)[cell.contentView viewWithTag:kReserv1ValueTag];		reserv1.text = [[streams objectAtIndex: indexPath.row] objectForKey:@"dept"];		reserv1.font = [UIFont systemFontOfSize:14];		reserv1.backgroundColor = color;					}			return cell;		}#pragma mark -#pragma mark Table view delegate- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {	self.loadDatamode = NO;	cm = [[Communication alloc] init];	self.cm.delegate= self;	if (indexPath.row == [self.streams count]) {				NSIndexPath* selection = [self.employeeList indexPathForSelectedRow];		if (selection)			[self.employeeList deselectRowAtIndexPath:selection animated:YES];			//NSString *nextPage = [NSString stringWithFormat:@"%i", 	++self.pageNumber];			//NSLog(@"s;ldkjf;aslkdjf;alskdajf  %@", nextPage);			//Clipboard *clipboards = [Clipboard sharedClipboard];			//[clipboards clipValue:pagenum clipKey:@"pageNumber"];			//[noti postNotificationName:@"pagenum" object:self];			//streams = nil;			//Clipboard *clipboard = [Clipboard sharedClipboard];			//streams = [clipboard clipKey:@"streams"];			//Clipboard *clipboard = [Clipboard sharedClipboard];			//	streams = [clipboard clipValue:nil clipKey:@"streams"];		//[noti postNotificationName:@"loadMore" object:self];		[self loadMore];			}else {		[detailViewController loadDetailContentAtIndex:[NSString stringWithFormat:@"%@", [[streams objectAtIndex:indexPath.row] objectForKey:@"userid"]]];		[tableView deselectRowAtIndexPath:indexPath animated:YES];		[detailViewController popoverDismiss];				/*		NSString *detailInput = [NSString stringWithFormat:@"%@", [[streams objectAtIndex:indexPath.row] objectForKey:@"userid"]];				//NSLog(@"%@", detailInput);				NSMutableDictionary *tmpDic = [[NSMutableDictionary alloc] init];				[tmpDic setValue:@"loginid" forKey:@"stype"];		[tmpDic setValue:detailInput forKey:@"sword"];							[tableView deselectRowAtIndexPath:indexPath animated:YES];					BOOL rslt = [self.cm callWithArray:tmpDic serviceUrl:URL_getAddressDetail];				if (rslt != YES) {			UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"알림" message:@"네트워크 오류 발생"														   delegate:self cancelButtonTitle:nil otherButtonTitles:@"확인", nil];			[alert show];				[alert release];					}				*/	}	selectedRow = indexPath.row;	}#pragma mark -#pragma mark UIPickerViewDataSource- (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView{	return 1;		//return 0;}- (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component {	return [self.pickerList count];}#pragma mark -#pragma mark UIPickerViewDelegate- (NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component {	return [self.pickerList objectAtIndex:row];}- (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component {	self.combobox.text = [self.pickerList objectAtIndex:row];}- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {		// Overriden to allow any orientation.    return YES	;}- (void)willAnimateRotationToInterfaceOrientation: (UIInterfaceOrientation)fromInterfaceOrientation duration:(NSTimeInterval)duration { 	self.orientations = [NSString stringWithFormat:@"%d" ,self.interfaceOrientation];	Clipboard *clipboard = [Clipboard sharedClipboard];	[clipboard clipValue:self.orientations clipKey:@"orientation"];}-(void)willStartCommunication:(id *)param1 requestDictionary:(NSMutableDictionary *)_dic{	self.indicator.hidden = NO;	self.employeeList.userInteractionEnabled = NO;	[self.indicator startAnimating];}-(void)didErrorCommunication:(NSError *)error requestDictionary:(NSMutableDictionary *)_dic{	[self.indicator stopAnimating];	self.indicator.hidden = YES;	self.employeeList.userInteractionEnabled = YES;}-(void)didEndCommunication:(NSDictionary *)_resultDic requestDictionary:(NSMutableDictionary *)_dic{	[self.indicator stopAnimating];	self.indicator.hidden = YES;	self.employeeList.userInteractionEnabled = YES;		NSArray * arView = [self.addtableview subviews];		//서브 뷰가 없다면 아래 문장 출력	for (int i=0; i<[arView count]; i++) {			//NSLog(@"서브 뷰의 시작 : %@", [arView objectAtIndex:i]);	}	for (UIView *subview in self.employeeList.subviews) {		if ([subview isKindOfClass:[UITableView class]]) 			[subview removeFromSuperview];			}	NSArray * sarView = [self.employeeList subviews];			for (int i=0; i<[sarView count]; i++) {			//	//NSLog(@"서브 뷰의 종료 : %@", [sarView objectAtIndex:i]);			}	NSDictionary *singles = (NSDictionary *)[_resultDic valueForKey:@"result"];	//NSLog(@"### totalcount: %@",[singles valueForKey:@"totalcount"]);		NSNumber *rsltCode = [singles objectForKey:@"code"];		if ([rsltCode intValue] != 0) {				NSString *strErrDesc = [singles objectForKey:@"errdesc"];		UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"알림" message:strErrDesc													   delegate:self cancelButtonTitle:nil otherButtonTitles:@"확인", nil];		[alert show];			[alert release];		[self.indicator stopAnimating];			//SearchEmployeeTableController *employeeTable = [[SearchEmployeeTableController alloc]initWithNibName:@"SearchEmployeeTableController" bundle:nil];					//employeeTable.view.autoresizingMask = UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleBottomMargin | UIViewAutoresizingFlexibleTopMargin;			//employeeTable.view.frame = self.addtableview.bounds;			//[self.addtableview addSubview:employeeTable.view];		[self.employeeList reloadData];	}	else {		if (self.loadDatamode) {			Clipboard *clipboard = [Clipboard sharedClipboard];				//NSMutableArray *Sstreams = (NSMutableArray *)[clipboard clipKey:@"streams"];			NSMutableArray *Sstreams = self.streams;			if (Sstreams == nil) {				//NSLog(@"더이상 없어요");			}				//NSArray *tmpResult = [NSArray arrayWithArray:(NSArray *)[_resultDic objectForKey:@"soslistinfo"]];			else {								NSArray *addData = [NSArray arrayWithArray:(NSArray *)[_resultDic objectForKey:@"personinfo"]];								self.streams = (NSMutableArray *)[Sstreams arrayByAddingObjectsFromArray:addData];								if ([addData count] < 20) {					self.morePageFlag = NO;					[clipboard clipValue:@"NO" clipKey:@"morePageFlag"];									}				else {					[clipboard clipValue:@"YES" clipKey:@"morePageFlag"];									}								[self.employeeList reloadData];				}						self.loadDatamode = NO;		}		/*		else if(self.detailDatamode){			NSDictionary *singles = (NSDictionary *)[_resultDic valueForKey:@"result"];			//NSLog(@"detail total count: %@", [singles valueForKey:@"totalcount"]);						NSNumber *rsltCode = [singles objectForKey:@"code"];			if ([rsltCode intValue] != 0) {								UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"알림" message:@"오류가 발생하였습니다."															   delegate:self cancelButtonTitle:nil otherButtonTitles:@"확인", nil];				[alert show];					[alert release];				[self.indicator stopAnimating];			}			else {					//NSString *totalcount = [singles valueForKey:@"totalcount"];					//self.totalcounts = [totalcount intValue];				NSArray *streams2 = (NSArray *)[_resultDic valueForKey:@"personinfo"];				if (streams2) {						//- base64image decoding					Clipboard *clipboard = [Clipboard sharedClipboard];					[clipboard clipValue:streams2 clipKey:@"streams2"];																															//[employeeDetailController.indicator stopAnimating];					[noti postNotificationName:@"pushDetail" object:self];														}				else {					//NSLog(@"errmesage : %@", [singles objectForKey:@"errdesc"]);					NSString *errDesc = [singles objectForKey:@"errDesc"];					UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"" message:errDesc																   delegate:self cancelButtonTitle:nil otherButtonTitles:@"확인", nil];										[alert show];						[alert release];									}							}			self.detailDatamode = NO;														}*/		else {			self.streams = [NSArray arrayWithArray:(NSArray *)[_resultDic valueForKey:@"personinfo"]];				// loop over all the stream objects and print their titles			if ([self.streams count]) {										Clipboard *clipboard = [Clipboard sharedClipboard];					//[clipboard clipValue:streams clipKey:@"streams"];													//SearchEmployeeTableController *employeeTable = [[SearchEmployeeTableController alloc]initWithNibName:@"SearchEmployeeTableController" bundle:nil];					//addtableview.delegate = self;					//CGRect cg = addtableview.frame;					//employeeTable.view.frame = cg;				if ([streams count] < 20) {					self.morePageFlag = NO;					[clipboard clipValue:@"NO" clipKey:@"morePageFlag"];									}				else {					[clipboard clipValue:@"YES" clipKey:@"morePageFlag"];									}										//employeeTable.view.autoresizingMask = UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleBottomMargin | UIViewAutoresizingFlexibleTopMargin;					//employeeTable.view.frame = self.addtableview.bounds;					//[self.addtableview addSubview:employeeTable.view];				[self.employeeList reloadData];			}			else {				//NSLog(@"errmesage : %@", [singles objectForKey:@"errdesc"]);				NSString *errDesc = [singles objectForKey:@"errdesc"];				if (errDesc == nil || [errDesc isEqualToString:@""]) {					errDesc = @"해당 요청에 문제가 있습니다! 서비스데스크(1588-3391:ARS-4)로 문의하여 주십시오!";				}				UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"" message:errDesc															   delegate:self cancelButtonTitle:nil otherButtonTitles:@"확인", nil];								[alert show];					[alert release];                [executiveStaffLabel becomeFirstResponder];				NSArray * arView = [self.employeeList subviews];					//서브 뷰가 없다면 아래 문장 출력				for (int i=0; i<[arView count]; i++) {						//NSLog(@"서브 뷰의 시작 : %@", [arView objectAtIndex:i]);				}				for (UIView *subview in self.employeeList.subviews) {					if ([subview isKindOfClass:[UITableView class]]) 						[subview removeFromSuperview];									}				NSArray * sarView = [self.employeeList subviews];												for (int i=0; i<[sarView count]; i++) {						//NSLog(@"서브 뷰의 종료 : %@", [sarView objectAtIndex:i]);									}								[self.employeeList reloadData];								[noti postNotificationName:@"detailViewClear" object:nil];							}		}			}							}- (IBAction)executiveStaff:(id)sender{	[executiveStaffLabel resignFirstResponder];	[self.modalPickerView removeFromSuperview];	//[noti postNotificationName:@"searchEmployee" object:self];	[self searchEmployee];		}- (BOOL)textFieldShouldReturn:(UITextField *)executiveStaffLabel {	//NSLog(@"Keyboard Done Pressed");		[self.executiveStaffLabel resignFirstResponder];	[self.modalPickerView removeFromSuperview];	//[noti postNotificationName:@"searchEmployee" object:self];	[self searchEmployee];		return YES;}/*- (void)textFieldDidBeginEditing:(UITextField *)textField {	[executiveStaffLabel resignFirstResponder];} */- (IBAction)backgroundTap:(id)sender {	[executiveStaffLabel resignFirstResponder];	[self.modalPickerView removeFromSuperview];	}	// <--  added by kwbaek Start -->-(void)comboboxPush2{	Clipboard *clipboard = [Clipboard sharedClipboard];	NSString *executiveStaffInput = [clipboard clipKey:@"typingvalue"];	NSString *stype = [clipboard clipKey:@"stype"];		if (stype) {		combobox.text = stype;	}	executiveStaffLabel.text  = executiveStaffInput;		//keyboard type	if ([stype isEqualToString:@"사내번호"] ) {		executiveStaffLabel.keyboardType = UIKeyboardTypeNumberPad;	}	else if ([stype isEqualToString:@"휴대폰"] ) {		executiveStaffLabel.keyboardType = UIKeyboardTypeNumberPad;	}	else {		executiveStaffLabel.keyboardType = UIKeyboardTypeDefault;			}		}-(void)searchEmployee{		if([executiveStaffLabel.text length] >= 2 && self.executiveStaffLabel.text != nil) {		NSMutableDictionary *tmpDic = [[NSMutableDictionary alloc] init];			cm = [[Communication alloc] init];		self.cm.delegate= self;							if ([self.combobox.text isEqualToString:@"이 름"]) {				[tmpDic setValue:@"name" forKey:@"stype"];			}			else if ([self.combobox.text isEqualToString:@"부서명"]) {				[tmpDic setValue:@"dept" forKey:@"stype"];			}						else if ([self.combobox.text isEqualToString:@"사내번호"]) {				[tmpDic setValue:@"phone" forKey:@"stype"];			}			else if ([self.combobox.text isEqualToString:@"휴대폰"]) {				[tmpDic setValue:@"mobile" forKey:@"stype"];			}			else if ([self.combobox.text isEqualToString:@""]) {				[tmpDic setValue:@"all" forKey:@"stype"];			}			else if ([self.combobox.text isEqualToString:@"전 체"]) {				[tmpDic setValue:@"all" forKey:@"stype"];			}			//조회 더보기 를 위해 검색어 저장		Clipboard *clipboard = [Clipboard sharedClipboard];		[clipboard clipValue:executiveStaffLabel.text clipKey:@"moreSword"];		[tmpDic setValue:executiveStaffLabel.text forKey:@"sword"];			//[tmpDic setValue:@"1" forKey:@"page"];			//[tmpDic setValue:@"20" forKey:@"pcount"];		[tmpDic setValue:@"1" forKey:@"page"];		[tmpDic setValue:@"20" forKey:@"pcount"];					//[tmpDic setValue:@"백경욱" forKey:@"sword"];			//[tmpDic setValue:@"201091075" forKey:@"userid"];		self.currentPage = 1;				BOOL rslt = [cm callWithArray:tmpDic serviceUrl:URL_getAddressList];				if (rslt != YES) {			UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"알림" message:@"네트워크 오류 발생"														   delegate:self cancelButtonTitle:nil otherButtonTitles:@"확인", nil];			[alert show];				[alert release];					}	}		else {		UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"알림" message:@"검색어를 2자리 이상 입력해 주세요."													   delegate:self cancelButtonTitle:nil otherButtonTitles:@"확인", nil];				[alert show];			[alert release];	}		self.loadDatamode = NO;	}-(void)loadMore{		NSString *nextPage = [NSString stringWithFormat:@"%d", 	++self.currentPage];	//NSLog(@"Next page : %@", nextPage);			cm = [[Communication alloc] init];	self.cm.delegate= self;		Clipboard *clipboard = [Clipboard sharedClipboard];	NSString *stype = [clipboard clipKey:@"stype"];		NSMutableDictionary *tmpDic = [[NSMutableDictionary alloc] init];		if (stype) {		if ([stype isEqualToString:@"이 름"]) {			[tmpDic setValue:@"name" forKey:@"stype"];		}		else if ([stype isEqualToString:@"부서명"]) {			[tmpDic setValue:@"dept" forKey:@"stype"];		}				else if ([stype isEqualToString:@"사내번호"]) {			[tmpDic setValue:@"phone" forKey:@"stype"];		}		else if ([stype isEqualToString:@"휴대폰"]) {			[tmpDic setValue:@"mobile" forKey:@"stype"];		}		else if ([stype isEqualToString:@""]) {			[tmpDic setValue:@"all" forKey:@"stype"];		}		else if ([stype isEqualToString:@"전 체"]) {			[tmpDic setValue:@"all" forKey:@"stype"];		}	}	else {		[tmpDic setValue:@"all" forKey:@"stype"];	}		NSString *moreSword = [clipboard clipKey:@"moreSword"];		[tmpDic setValue:moreSword forKey:@"sword"];	[tmpDic setValue:nextPage forKey:@"page"];	[tmpDic setValue:@"20" forKey:@"pcount"];		//[tmpDic setValue:@"백경욱" forKey:@"sword"];		//[tmpDic setValue:@"201091075" forKey:@"userid"];		BOOL rslt = [cm callWithArray:tmpDic serviceUrl:URL_getAddressList];		if (rslt != YES) {		UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"알림" message:@"네트워크 오류 발생"													   delegate:self cancelButtonTitle:nil otherButtonTitles:@"확인", nil];		[alert show];			[alert release];			}	self.loadDatamode = YES;			}- (IBAction)comboboxControl:(id)sender{		/*		//PickerViewController *pickerviewController = [[PickerViewController alloc]initWithNibName:@"PickerView" bundle:nil];	PickerViewController *pickerviewController = [[PickerViewController alloc] init];		//pickerviewController.modalPresentationStyle = UIModalPresentationStyle;	[pickerviewController setModalTransitionStyle:UIModalTransitionStylePartialCurl];		// UIModalTransitionStyleCoverVertical : 모달 뷰가 아래서 위로 덮으며 전환됩니다. (기본값)		// UIModalTransitionStyleFlipHorizontal : 앞면의 부모 뷰가 회전되어 뒷면의 모달 뷰로 전환됩니다		// UIModalTransitionStyleCrossDissolve : 부모 뷰가 서서히 사라짐과 동시에 모달 뷰로 전환됩니다.		// UIModalTransitionStylePartialCurl : 부모 뷰가 종이처럼 휘어지며 모달 뷰로 전환됩니다. 	[self presentModalViewController:pickerviewController animated:YES];	[pickerviewController release];		//keyboard numberpad	*/		 		 if (!self.modalPickerView.superview) {					 CGRect cg = self.employeeList.frame;			 self.modalPickerView.frame = cg;		[self.view addSubview:self.modalPickerView];	}			}- (IBAction)textFieldDoneEditing:(id)sender {	[self.executiveStaffLabel resignFirstResponder];	[self.modalPickerView removeFromSuperview];		//[noti postNotificationName:@"searchEmployee" object:self];	[self searchEmployee];	}- (void)didReceiveMemoryWarning {		// Releases the view if it doesn't have a superview.    [super didReceiveMemoryWarning];    		// Release any cached data, images, etc. that aren't in use.}- (void)viewDidUnload {    [super viewDidUnload];		// Release any retained subviews of the main view.		// e.g. self.myOutlet = nil;}-(IBAction) nextCellClicked{	//[noti postNotificationName:@"loadMore" object:self];	[self loadMore];}- (void)dealloc {	[pickerList release];		[executiveStaffLabel release];	[background release];	[addtableview release];	[combobox release];	[streams release];	[modalPickerView release];	[indicator release];	[orientations release];	[cm release];	[employeeList release];	[detailViewController release];	[nextCell release];		[pickerView release];		    [super dealloc];		}#pragma overay event- (void)overlayView{        // View의 폭에 맞게 툴바를 설정한다.        //Add the overlay view.	if(splitOverlayViewController == nil)		splitOverlayViewController = [[SplitOverlayViewController alloc] initWithNibName:@"SplitOverlayViewController" bundle:[NSBundle mainBundle]];		CGFloat yaxis = self.navigationController.navigationBar.frame.size.height;    	CGFloat width = self.view.frame.size.width;    //	CGFloat height = self.view.frame.size.height;    CGFloat height = 800;        [self.navigationController setNavigationBarHidden:YES animated:YES];        //Parameters x = origion on x-axis, y = origon on y-axis.	CGRect frame = CGRectMake(0, 0, width, height);	splitOverlayViewController.view.frame = frame;		splitOverlayViewController.view.backgroundColor = [UIColor grayColor];	splitOverlayViewController.view.alpha = 0.5;			[self.view addSubview:splitOverlayViewController.view ];        }- (void)overlayViewCancel{	    [self.navigationController setNavigationBarHidden:NO animated:YES];    	[splitOverlayViewController.view removeFromSuperview];	[splitOverlayViewController release];	splitOverlayViewController = nil;        //	self.currentTableView.contentOffset = CGPointMake(0, 0);    //	CGFloat width = self.view.frame.size.width;    //        //	self.currentTableView.tableHeaderView.frame = CGRectMake(0, 0, width, 44);}@end